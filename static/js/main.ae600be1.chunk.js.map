{"version":3,"sources":["images/dallas.webp","images/austin.webp","images/beijing.webp","images/newyork.webp","images/sanfrancisco.webp","components/Hamburger.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","cities","name","image","dallas","austin","newyork","beijing","sanfrancisco","Hamburger","state","menu","useRef","revealMenu","revealMenuBackground","cityBackground","line1","line2","line3","info","useEffect","clicked","gsap","to","duration","ease","height","stagger","amount","css","display","initial","opacity","staggerReveal","fadeInUp","staggerText","node1","node2","from","transformOrigin","skewY","node3","y","delay","handleCityReturn","handleHover","e","target","skewX","handleHoverExit","ref","el","className","onMouseEnter","onMouseOut","href","map","key","city","background","withRouter","history","useState","menuName","setState","disabled","setDisabled","listen","disableMenu","setTimeout","onClick","inital","console","log","Sidda","AboutMe","Contact","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae600be1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dallas.2bc38187.webp\";","module.exports = __webpack_public_path__ + \"static/media/austin.a7aadf33.webp\";","module.exports = __webpack_public_path__ + \"static/media/beijing.209dcd10.webp\";","module.exports = __webpack_public_path__ + \"static/media/newyork.ebb81965.webp\";","module.exports = __webpack_public_path__ + \"static/media/sanfrancisco.b58ad59e.webp\";","import React, {useEffect, useRef} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { gsap } from \"gsap\";\r\nimport dallas from '../images/dallas.webp'\r\nimport austin from '../images/austin.webp'\r\nimport beijing from '../images/beijing.webp'\r\nimport newyork from '../images/newyork.webp'\r\nimport sanfrancisco from '../images/sanfrancisco.webp'\r\n\r\n\r\n\r\nconst cities = [\r\n    {name: 'Dallas', image: dallas},\r\n    {name: 'Austin', image: austin},\r\n    {name: 'New York', image: newyork},\r\n    {name: 'Beijing', image: beijing},\r\n    {name: 'San Francisco', image: sanfrancisco}\r\n]\r\n\r\n\r\nconst Hamburger = ({state}) => {\r\n    let menu = useRef(null)\r\n    let revealMenu = useRef(null)\r\n    let revealMenuBackground = useRef(null)\r\n    let cityBackground = useRef(null)\r\n    let line1 = useRef(null)\r\n    let line2 = useRef(null)\r\n    let line3 = useRef(null)\r\n    let info = useRef(null)\r\n\r\n    useEffect(() => {\r\n    \r\n        if (state.clicked === false) {\r\n\r\n            \r\n              gsap.to([revealMenu, revealMenuBackground], {\r\n                duration: 0.8,\r\n                ease: \"power3.inOut\",\r\n                height: 0,\r\n                stagger: {\r\n                    amount: 0.07\r\n                  }\r\n              });\r\n            //close our menu\r\n            gsap.to(menu, { duration: 1, css: { display: \"none\" } });\r\n        } else if (state.clicked === true || (state.clicked === true && state.initial === null)) {\r\n            //open our menu\r\n            gsap.to(menu, { duration: 0, css: { display: \"block\" } });\r\n            //Allow menu to have height of 100%\r\n            gsap.to([revealMenu, revealMenuBackground], {\r\n              duration: 0,\r\n              opacity: 1,\r\n              height: \"100%\"\r\n            });\r\n            staggerReveal([revealMenu, revealMenuBackground])\r\n            fadeInUp(info)\r\n            staggerText(line1, line2, line3)\r\n        }\r\n    }, [state]);\r\n\r\n    const staggerReveal = (node1, node2) => {\r\n         gsap.from([node1, node2], {\r\n            duration: 0.8,\r\n            height: 0,\r\n            transformOrigin: \"right top\",\r\n            skewY: 2,\r\n            ease: \"power3.inOut\",\r\n            stagger: {\r\n                amount: 0.1\r\n            }\r\n         })\r\n    }\r\n\r\n    const staggerText = (node1, node2, node3) => {\r\n        gsap.from([node1, node2, node3], {\r\n           duration: 0.8,\r\n           y: 100,\r\n           delay: 0.1,\r\n           ease: \"power3.inOut\",\r\n           stagger: {\r\n               amount: 0.3\r\n           }\r\n        })\r\n   }\r\n\r\n    const fadeInUp = (node1) => {\r\n        gsap.from(node1, {\r\n           duration: 1,\r\n           y: 60,\r\n           delay: 0.2,\r\n           opacity: 0,\r\n           ease: \"power3.inOut\",\r\n        })\r\n   }\r\n\r\n   const handleCity = city => {\r\n       gsap.to(cityBackground, {\r\n           duration: 0,\r\n           background: `url(${city}) center center`\r\n       })\r\n       gsap.to(cityBackground, {\r\n        duration: 0.4,\r\n        opacity: 1,\r\n        ease: \"power3.inOut\"\r\n    })\r\n    gsap.from(cityBackground, {\r\n        duration: 0,\r\n        skewY: 2,\r\n        transformOrigin: 'right top'\r\n    })\r\n   }\r\n\r\n   const handleCityReturn = () => {\r\n       gsap.to(cityBackground, {\r\n           duration: 0.4,\r\n           opacity: 0\r\n       })\r\n   }\r\n\r\n   const handleHover = e => {\r\n       gsap.to(e.target, {\r\n           duration: 0.3,\r\n           y: 3,\r\n           skewX: 4,\r\n           ease: \"power3.inOut\"\r\n       })\r\n   }\r\n\r\n   const handleHoverExit = e => {\r\n    gsap.to(e.target, {\r\n        duration: 0.3,\r\n        y: -3,\r\n        skewX: 0,\r\n        ease: \"power3.inOut\"\r\n    })\r\n   }\r\n\r\n    return (\r\n      <div ref={el => (menu = el)} className=\"hamburger-menu\">\r\n        <div\r\n          ref={el => (revealMenuBackground = el)}\r\n          className=\"menu-secondary-background-color\"\r\n        ></div>\r\n        <div ref={el => (revealMenu = el)} className=\"menu-layer\">\r\n          <div ref={el => (cityBackground = el)} className=\"menu-city-background\"></div>\r\n          <div className=\"container\">\r\n            <div className=\"wrapper\">\r\n              <div className=\"menu-links\">\r\n                <nav>\r\n                  <ul>\r\n                    <li>\r\n                      <Link onMouseEnter={e => handleHover(e)} onMouseOut={e => handleHoverExit(e)} ref={(el) => (line1 = el)} to=\"/opportunities\">\r\n                        Sidda\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link onMouseEnter={e => handleHover(e)} onMouseOut={e => handleHoverExit(e)} ref={(el) => (line2 = el)} to=\"/solutions\">\r\n                        About Me\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link onMouseEnter={e => handleHover(e)} onMouseOut={e => handleHoverExit(e)} ref={(el) => (line3 = el)} to=\"/contact-us\">\r\n                        Coding Tip\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </nav>\r\n                <div ref={(el) => (info = el)} className=\"info\">\r\n                  <h3>Thanks to Wrong Akram!</h3>\r\n                  <p>\r\n                   Wrong Akram is a Really cool guy who inspired me to make this!\r\n                   Here his channel <a href=\"https://www.youtube.com/channel/UCqrxiLP9RHz2GxDJaZuTRBw\">Channel</a>\r\n                  </p>\r\n                </div>\r\n                <div className=\"locations\">\r\n                  Where I've Been:\r\n                  {cities.map(el => (\r\n                      <span key={el.name} onMouseEnter={() => handleCity(el.image)} onMouseOut={handleCityReturn}>{el.name}</span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Hamburger;","import React, {useState, useEffect} from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport Hamburger from './Hamburger';\r\n\r\nconst Header = ({history}) => {\r\n    const [state, setState] = useState({\r\n        initial: false,\r\n        clicked: false,\r\n        menuName: \"Menu\"\r\n    })\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n     \r\n    const handleMenu = () => {\r\n        disableMenu();\r\n        if (state.inital === false) {\r\n            setState({\r\n                inital: null,\r\n                clicked: true,\r\n                menuName: \"Close\"\r\n            })\r\n            console.log(1)\r\n        } else if (state.clicked === true) {\r\n           setState({\r\n               clicked: !state.clicked,\r\n               menuName: \"Menu\"\r\n           })\r\n           console.log(2)\r\n        } else if (state.clicked === false) {\r\n            setState({\r\n                clicked: !state.clicked,\r\n                menuName: \"Close\"\r\n            })\r\n            console.log(3)\r\n         }\r\n    }\r\n\r\n    useEffect(() => {\r\n        history.listen(() => {\r\n            setState({clicked: false, menu: \"Menu\"})\r\n        })\r\n    })\r\n\r\n    const disableMenu = () => {\r\n         setDisabled(!disabled)\r\n         setTimeout(() => {\r\n             setDisabled(false)\r\n         }, 1200)\r\n    }\r\n\r\n    return <header>\r\n        <div className=\"container\">\r\n            <div className=\"wrapper\">\r\n                <div className=\"inner-header\">\r\n                    <div className=\"logo\">\r\n                       <Link to=\"/\">NERDS</Link>\r\n                    </div>\r\n                    <div className=\"menu\">\r\n                        <button disabled={disabled} onClick={handleMenu}>Menu</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Hamburger state={state}/>\r\n    </header>\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\nimport './App.scss';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Header />\n          <div className=\"container\">\n            <div className=\"wrapper\">\n              <div className=\"home\">\n                <Switch>\n                  <Route exact path='/' component={Home}/>\n                  <Route exact path='/opportunities' component={Sidda} />\n                  <Route exact path='/solutions' component={AboutMe} />\n                  <Route exact path='/contact-us' component={Contact} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction Sidda() {\n  return <p>I'm the biggest nerd ever!!!!</p>\n}\n\nfunction AboutMe() {\n  return <p>I am ten years old and I live in Medfield \":)\"</p>\n}\n\nfunction Contact() {\n  return <ul>\n    <li>1.Media Queries in Sass are so Cool!! just do include and put the device</li>\n    <li>We need Babel to read stuff that the browser can't read including sass and JSX</li>\n  </ul>\n}\n\nfunction Home() {\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <h5>\n          WE ARE <b>NERDS</b> AND WE LIKE <b>CODING!!</b>\n        </h5>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}